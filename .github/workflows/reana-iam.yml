name: reana-iam-docker

on:
  push:
    branches: 
      - main
    paths:
      - reana-iam-sync/**

env:
  CONTAINER: reana-iam-sync
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}-$CONTAINER

# jobs:
#   build:

#     runs-on: ubuntu-latest
#     permissions:
#       contents: read
#       packages: write
#       # This is used to complete the identity challenge
#       # with sigstore/fulcio when running outside of PRs.
#       id-token: write

#     steps:
#       - name: Checkout repository
#         uses: actions/checkout@v3

#       # Login against a Docker registry except on PR
#       # https://github.com/docker/login-action
#       - name: Log into registry ${{ env.REGISTRY }}
#         if: github.event_name != 'pull_request'
#         uses: docker/login-action@28218f9b04b4f3f62068d7b6ce6ca5b26e35336c
#         with:
#           registry: ${{ env.REGISTRY }}
#           username: ${{ github.actor }}
#           password: ${{ secrets.GITHUB_TOKEN }}

#       - name: Build and push Docker image
#         id: build-and-push
#         working-directory: ${{ env.CONTAINER }}
#         run: |
#           git clone https://github.com/egazzarr/docker-tests.git
#           cd docker-tests
#           # Echo the output, substitute the `-g` with a `-` and export the result.
#           # The `-g` is by default on git describe because of historical reasons.
#           echo "tag_describe is $(git describe --tags | sed 's/-g/-/g')"
#           export tag_describe=$(git describe --tags | sed 's/-g/-/g')
#           cd ..
#           docker build --build-arg BUILD_DATE=$(date +'%Y-%m-%dT%H:%M:%SZ') --tag ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${tag_describe} .
#           docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${tag_describe}          
#           docker tag ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${tag_describe} ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
#           docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
#           rm -rf docker-tests
jobs:

  build-and-push-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        
      - name: Log in to the Container registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
      - name: Build and push Docker image
        uses: docker/build-push-action@f2a1d5e99d037542a71f64918e516c093c6f3fc4
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          
